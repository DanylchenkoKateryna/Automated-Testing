version: 2.1

orbs:
  win: circleci/windows@5.0
  #coveralls: coveralls/coveralls@2.2.1
  codecov: codecov/codecov@4.1.0

jobs:
  test:
    description: Setup and run application tests
    #parallelism: 4 
    executor:
      name: win/server-2022
           
    steps:
      - checkout
      - attach_workspace:
          at: .
       
      # Restore cache for NuGet packages
      - restore_cache:
          keys:
            - nuget-cache-{{ checksum "Calculator/Calculator_Exam_CommandProject.sln" }}
            - nuget-cache-
     
      - run:
          name: "Run Application Tests"
          command: |
            cmd.exe /c circleci_test.bat
            #msbuild "Calculator/Tests/AnalizerClassLibrary.Tests.csproj" /p:Configuration=Release
             
            #circleci tests glob "Calculator/Tests/**/*Tests.cs" | circleci tests split > C:\Users\circleci\project\Calculator\Tests\tests-to-run
            
            # Read the content of the file
            #$testFiles = cat C:\Users\circleci\project\Calculator\Tests\tests-to-run
            #$removePath="Calculator\"
            #foreach ($testFile in $testFiles) {
                    #$relativePath = $testFile.Substring($removePath.Length) -replace '\\', '.' -replace '\.cs$', ''
                    #$relativePath
                    #dotnet test Calculator/Tests/AnalizerClassLibrary.Tests.csproj --filter $relativePath --configuration Release --no-build --logger "junit;LogFileName=test-results.xml"  
            #}
            #dotnet.exe test Calculator/Tests/AnalizerClassLibrary.Tests.csproj -v n --configuration Release --no-build --logger "junit;LogFileName=C:\Users\circleci\project\Calculator\Tests\TestResults\test-results.xml" 
          when: always
       
      - run:
          name: Install ReportGenerator
          command: |
            dotnet tool install -g dotnet-reportgenerator-globaltool
            dotnet tool install --global coveralls.net --version 4.0.1
          
      - run:
          name: Generate coverage report
          command: |
            mkdir Calculator/GeneralResult
            $coverage_files = Get-ChildItem -Path "Calculator/CodeCoverageResults" -Filter "coverage.cobertura.xml" -Recurse
            $coverage_files_list = ""
            foreach ($file in $coverage_files) {
              $coverage_files_list += $file.FullName + ";"
            }
            # Remove the trailing semicolon
            $coverage_files_list = $coverage_files_list.TrimEnd(';')
            reportgenerator -reports:$coverage_files_list -targetdir:Calculator "-reporttypes:Html;Cobertura" 
            cat Calculator/Cobertura.xml
            
      #- store_artifacts:
      #    path: Calculator
      #    destination: coverage-report
      
      #- run:
      #    name: Upload coverage to Codecov
      #    shell: powershell.exe
      #    command: |
      #      $coverage_files = Get-ChildItem -Path "Calculator/CodeCoverageResults" -Filter "coverage.cobertura.xml" -Recurse
      #      Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe -OutFile codecov.exe
      #      foreach ($coverage_file in $coverage_files.FullName) {
      #        .\codecov.exe -f $coverage_file -t $env:CODECOV_TOKEN
      #      }

      - store_artifacts:
          path: Calculator
          destination: coverage-report
      
      # Store test result artifacts
      - store_artifacts:
          path: Calculator/TestResults
          destination: test-results

      # Store test results for CircleCI Insights
      - store_test_results:
          path: Calculator/TestResults

      - persist_to_workspace:
          root: .
          paths:
            - Calculator/Cobertura.xml
 
  upload-coverage-codecov:
     docker:
       - image: cimg/python:3.12.4
     steps:
       - checkout
       - attach_workspace:
           at: .
       - run:
          name: Install Codecov
          command: pip install codecov
       - run:
          name: Upload coverage to Codecov
          command: |
            codecov -t $CODECOV_TOKEN -f Calculator/Cobertura.xml
       #- codecov/upload: 
       #    file: 'Calculator/Cobertura.xml'
   
  #upload-coverage-coveralls:
  #  docker:
  #    - image: circleci/node:10.16.0
  #  steps:
  #    - attach_workspace:
  #        at: .
  #    - coveralls/upload:
  #        coverage_file: Calculator/Cobertura.xml

  build:
    description: Build application with Release configuration
    executor:
      name: win/server-2022
    steps:
      - checkout
      - attach_workspace:
          at: .
     # Restore cache for NuGet packages
      - restore_cache:
          keys:
            - nuget-cache-{{ checksum "Calculator/Calculator_Exam_CommandProject.sln" }}
            - nuget-cache-
      - run:
          name: "Install project dependencies"
          command: nuget restore Calculator/Calculator_Exam_CommandProject.sln
      
      # Save cache for NuGet packages
      - save_cache:
          paths:
            - C:/Users/circleci/.nuget/packages
          key: nuget-cache-{{ checksum "Calculator/Calculator_Exam_CommandProject.sln" }}
      - run:
          name: "Build Application according to some given configuration"
          command: cmd.exe /c Calculator_Buiild.bat
      - persist_to_workspace:
          root: .    # Root directory to persist
          paths:
            - Calculator/
      
workflows:
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - upload-coverage-codecov:
          requires:
            - test
      #- upload-coverage-coveralls:
      #    requires:
      #      - test
