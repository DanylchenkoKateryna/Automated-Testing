version: 2.1
 
orbs:
  win: circleci/windows@5.0
  coveralls: coveralls/coveralls@2.2.1
  #codecov: codecov/codecov@4.1.0
 
jobs:
  test:
    description: Setup and run application tests
    #parallelism: 4 
    executor:
      name: win/server-2022
           
    steps:
      - checkout
      
      - attach_workspace:
          at: .

      - restore_cache:
          keys:
            - v1-nuget-{{ checksum "Calculator/Calculator_Exam_CommandProject.sln" }}
            - v1-nuget-
      
      - run:
          name: Install ReportGenerator
          command: |
            dotnet tool install -g dotnet-reportgenerator-globaltool
   
      - run:
          name: "Run Application Tests"
          command: | #.circleci\circleci_test.bat
            dotnet test Calculator\xUnitProject\xUnitProject.csproj --configuration Release --no-build --logger "junit;LogFileName=C:\Users\circleci\project\Calculator\TestResults\test-results-1.xml" --collect:"XPlat Code Coverage" --results-directory C:\Users\circleci\project\Calculator\CodeCoverageResults
            dotnet test Calculator\TestProject2.Tests\TestProject2.Tests.csproj --configuration Release --no-build --logger "junit;LogFileName=C:\Users\circleci\project\Calculator\TestResults\test-results-3.xml" --collect:"XPlat Code Coverage" --results-directory C:\Users\circleci\project\Calculator\CodeCoverageResults
            dotnet test Calculator\TestProject3.Tests\TestProject3.Tests.csproj --configuration Release --no-build --logger "junit;LogFileName=C:\Users\circleci\project\Calculator\TestResults\test-results-4.xml" --collect:"XPlat Code Coverage" --results-directory C:\Users\circleci\project\Calculator\CodeCoverageResults

            #msbuild "Calculator/Tests/AnalizerClassLibrary.Tests.csproj" /p:Configuration=Release
             
            #circleci tests glob "Calculator/Tests/**/*Tests.cs" | circleci tests split > C:\Users\circleci\project\Calculator\Tests\tests-to-run
            
            # Read the content of the file
            #$testFiles = cat C:\Users\circleci\project\Calculator\Tests\tests-to-run
            #$removePath="Calculator\"
            #foreach ($testFile in $testFiles) {
                    #$relativePath = $testFile.Substring($removePath.Length) -replace '\\', '.' -replace '\.cs$', ''
                    #$relativePath
                    #dotnet test Calculator/Tests/AnalizerClassLibrary.Tests.csproj --filter $relativePath --configuration Release --no-build --logger "junit;LogFileName=test-results.xml"  
            #}
            #dotnet.exe test Calculator/Tests/AnalizerClassLibrary.Tests.csproj -v n --configuration Release --no-build --logger "junit;LogFileName=C:\Users\circleci\project\Calculator\Tests\TestResults\test-results.xml" 
          when: always
      
      - run:
          name: Generate coverage report
          command: |
            mkdir Calculator/GeneralResult
            $coverage_files = Get-ChildItem -Path "Calculator/CodeCoverageResults" -Filter "coverage.cobertura.xml" -Recurse
            $coverage_files
            $coverage_files_list = ""
            foreach ($file in $coverage_files) {
              $file.FullName
              $coverage_files_list += $file.FullName + ";"
            }
            # Remove the trailing semicolon
            $coverage_files_list = $coverage_files_list.TrimEnd(';')
            reportgenerator -reports:$coverage_files_list -targetdir:. "-reporttypes:Cobertura"
            sed -i 's/\\/\//g' C:\Users\circleci\project\cobertura.xml
            
      - persist_to_workspace:
          root: .
          paths:
            - Cobertura.xml
      
      # Store test result artifacts
      - store_artifacts:
          path: Calculator/TestResults
          destination: test-results

      - store_test_results:
          path: Calculator/TestResults
 
  upload-coverage-coveralls:
     docker:
       - image: cimg/node:22.5.1
     steps:
       - checkout
       - attach_workspace:
           at: .
       - run:
           name: Print current working directory
           command: pwd
       - coveralls/upload:
           coverage_file: Cobertura.xml
  
  upload-coverage-codecov:
     docker:
       - image: cimg/python:3.12.4
     steps:
       - checkout
       - attach_workspace:
           at: .
       - run:
          name: Install Codecov
          command: pip install codecov
       - run:
          name: Upload coverage to Codecov
          command: |
            codecov -t $CODECOV_TOKEN -f Calculator/Cobertura.xml
  
  build:
    description: Build application with Release configuration
    executor:
      name: win/server-2022
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-nuget-{{ checksum "Calculator/Calculator_Exam_CommandProject.sln" }}
            - v1-nuget-
     
      #- restore_cache:
      #    keys: 
      #      - nuget-cache-v6-{{ checksum "Calculator/CalcClassBr/CalcClassBr.csproj" }}
      #        - {{ checksum "Calculator/AnalizerClassLibrary.Tests/AnalizerClassLibrary.Tests.csproj" }}
      #        - {{ checksum "Calculator/xUnitProject/xUnitProject.csproj" }}
      #        - {{ checksum "Calculator/TestProject2.Tests/TestProject2.Tests.csproj" }}
      #        - {{ checksum "Calculator/TestProject3.Tests/TestProject3.Tests.csproj" }}  
      #      - nuget-cache-v6-  # fallback to using the latest cache if no exact match is found

      - run:
          name: "Install project dependencies"
          command: | #.circleci\circleci_restore.bat
            nuget restore "Calculator/Calculator_Exam_CommandProject.sln"
      
      - run:
          name: "Build Application according to some given configuration"
          command: .circleci\Calculator_Buiild.bat
            #msbuild Calculator/AnalizerClassLibrary/AnalizerClassLibrary.csproj /p:Configuration=Release -t:build -restore -p:RestorePackagesConfig=true /p:SolutionDir=C:\Users\circleci\project\Calculator\
            #msbuild Calculator/CalcClassBr/CalcClassBr.csproj /p:Configuration=Release -t:build -restore -p:RestorePackagesConfig=true /p:SolutionDir=C:\Users\circleci\project\Calculator\
            #msbuild Calculator/ErrorLibrary/ErrorLibrary.csproj /p:Configuration=Release -t:build -restore -p:RestorePackagesConfig=true /p:SolutionDir=C:\Users\circleci\project\Calculator\
            #msbuild Calculator/GraphInterface/GraphInterface.csproj /p:Configuration=Release -t:build -restore -p:RestorePackagesConfig=true /p:SolutionDir=C:\Users\circleci\project\Calculator\
            #msbuild Calculator/AnalizerClassLibrary.Tests/AnalizerClassLibrary.Tests.csproj /p:Configuration=Release -t:build -restore -p:RestorePackagesConfig=true /p:SolutionDir=C:\Users\circleci\project\Calculator\
            #msbuild Calculator/xUnitProject/xUnitProject.csproj /p:Configuration=Release -t:build -restore -p:RestorePackagesConfig=true /p:SolutionDir=C:\Users\circleci\project\Calculator\
            #msbuild Calculator/TestProject2.Tests/TestProject2.Tests.csproj /p:Configuration=Release -t:build -restore -p:RestorePackagesConfig=true /p:SolutionDir=C:\Users\circleci\project\Calculator\
            #msbuild Calculator/TestProject3.Tests/TestProject3.Tests.csproj /p:Configuration=Release -t:build -restore -p:RestorePackagesConfig=true /p:SolutionDir=C:\Users\circleci\project\Calculator\

      - save_cache:
          paths:
            - ~/.nuget/packages
          key: v1-nuget-{{ checksum "Calculator/Calculator_Exam_CommandProject.sln" }}
          
      #- save_cache:
      #    paths:
      #      - ~/.nuget/packages
      #    key: nuget-cache-v6-{{ checksum "Calculator/CalcClassBr/CalcClassBr.csproj" }}
      #         - {{ checksum "Calculator/AnalizerClassLibrary.Tests/AnalizerClassLibrary.Tests.csproj" }}
      #         - {{ checksum "Calculator/xUnitProject/xUnitProject.csproj" }}
      #         - {{ checksum "Calculator/TestProject2.Tests/TestProject2.Tests.csproj" }}
       #        - {{ checksum "Calculator/TestProject3.Tests/TestProject3.Tests.csproj" }}
      
      - persist_to_workspace:
          root: .
          paths:
            - Calculator/*/bin
            - Calculator/*/obj
      

workflows:
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      #- upload-coverage-codecov:
      #    requires:
      #      - test
      - upload-coverage-coveralls:
          requires:
            - test
